{"version":3,"sources":["context/todoContext.js","context/todoReducer.js","context/types.js","context/TodoState.js","components/Header.js","components/AddTodo.js","components/TodoItem.js","components/Todos.js","App.js","index.js"],"names":["todoContext","createContext","state","action","type","payload","todos","map","todo","id","isCompleted","filter","title","editedTitle","TodoState","props","useReducer","todoReducer","dispatch","Provider","value","addTodo","toggleCompleted","deleteTodo","editTodo","children","Header","className","AddTodo","useContext","TodoContext","useState","setTitle","Form","onSubmit","e","preventDefault","uuidv4","alert","Row","Col","Control","placeholder","onChange","target","Button","variant","TodoItem","disabled","toggleDisabled","setEditedTitle","useEffect","InputGroup","Prepend","Checkbox","FormControl","style","textDecoration","fontWeight","textTransform","Append","onClick","Todos","length","key","App","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0db7c65a.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst todoContext = createContext();\r\n\r\nexport default todoContext;\r\n","import { ADD_TODO, TOGGLE_COMPLETED, DELETE_TODO, EDIT_TODO } from './types';\r\n\r\nexport default (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    default:\r\n      return state;\r\n\r\n    case ADD_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, payload]\r\n      };\r\n\r\n    case TOGGLE_COMPLETED:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo =>\r\n          todo.id === payload\r\n            ? { ...todo, isCompleted: !todo.isCompleted }\r\n            : todo\r\n        )\r\n      };\r\n\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo.id !== payload)\r\n      };\r\n\r\n    case EDIT_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo =>\r\n          todo.id === payload.id\r\n            ? { ...todo, title: payload.editedTitle }\r\n            : todo\r\n        )\r\n      };\r\n  }\r\n};\r\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_COMPLETED = 'TOGGLE_COMPLETED';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\n","import React, { useReducer } from 'react';\r\nimport todoContext from './todoContext';\r\nimport todoReducer from './todoReducer';\r\nimport { ADD_TODO, TOGGLE_COMPLETED, DELETE_TODO, EDIT_TODO } from './types';\r\n\r\nconst TodoState = props => {\r\n  const initialState = {\r\n    todos: []\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(todoReducer, initialState);\r\n\r\n  // Add todo\r\n  const addTodo = todo => {\r\n    dispatch({\r\n      type: ADD_TODO,\r\n      payload: todo\r\n    });\r\n  };\r\n\r\n  // Mark as completed\r\n  const toggleCompleted = id => {\r\n    dispatch({\r\n      type: TOGGLE_COMPLETED,\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  // Delete todo\r\n  const deleteTodo = id => {\r\n    dispatch({\r\n      type: DELETE_TODO,\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  // Edit todo\r\n  const editTodo = ({ id, editedTitle }) => {\r\n    dispatch({\r\n      type: EDIT_TODO,\r\n      payload: { id, editedTitle }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <todoContext.Provider\r\n      value={{\r\n        todos: state.todos,\r\n        addTodo,\r\n        toggleCompleted,\r\n        deleteTodo,\r\n        editTodo\r\n      }}\r\n    >\r\n      {props.children}\r\n    </todoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TodoState;\r\n","import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className='navbar navbar-light bg-info'>\r\n      <h4 className='text-primary'>\r\n        <i className='fas fa-pencil-alt'></i> Todo List\r\n      </h4>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useContext } from 'react';\r\nimport TodoContext from '../context/todoContext';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\n\r\nconst AddTodo = () => {\r\n  const todoContext = useContext(TodoContext);\r\n  const { addTodo } = todoContext;\r\n\r\n  const [title, setTitle] = useState('');\r\n\r\n  const onChange = e => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    title !== ''\r\n      ? addTodo({ title, isCompleted: false, id: uuidv4() })\r\n      : alert('Please provide todo title!');\r\n    setTitle('');\r\n  };\r\n\r\n  return (\r\n    <Form className='my-4' onSubmit={e => onSubmit(e)}>\r\n      <Form.Row>\r\n        <Col>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Add Todo'\r\n            value={title}\r\n            onChange={e => onChange(e)}\r\n          />\r\n        </Col>\r\n        <Col>\r\n          <Button variant='outline-primary' type='submit'>\r\n            Submit\r\n          </Button>\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoContext from '../context/todoContext';\r\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst TodoItem = ({ todo: { id, title, isCompleted } }) => {\r\n  const todoContext = useContext(TodoContext);\r\n  const { toggleCompleted, deleteTodo, editTodo } = todoContext;\r\n\r\n  const [disabled, toggleDisabled] = useState(true);\r\n  const [editedTitle, setEditedTitle] = useState({ ...title });\r\n\r\n  useEffect(() => {\r\n    setEditedTitle(title);\r\n  }, [title]);\r\n\r\n  const styleCompleted = {\r\n    textDecoration: 'line-through',\r\n    fontWeight: 'bold',\r\n    textTransform: 'uppercase'\r\n  };\r\n\r\n  const styleNotCompleted = {\r\n    fontWeight: 'bold',\r\n    textTransform: 'uppercase'\r\n  };\r\n\r\n  const onChange = e => {\r\n    setEditedTitle(e.target.value);\r\n  };\r\n\r\n  const onEdit = e => {\r\n    if (!disabled) {\r\n      editTodo({ id, editedTitle });\r\n    }\r\n    toggleDisabled(!disabled);\r\n  };\r\n\r\n  return (\r\n    <InputGroup className='my-2'>\r\n      <InputGroup.Prepend>\r\n        <InputGroup.Checkbox\r\n          onChange={e => toggleCompleted(id)}\r\n        ></InputGroup.Checkbox>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        type='text'\r\n        onChange={e => onChange(e)}\r\n        style={isCompleted ? styleCompleted : styleNotCompleted}\r\n        placeholder='Edit todo title'\r\n        value={editedTitle}\r\n        disabled={disabled}\r\n      />\r\n      <InputGroup.Append>\r\n        <Button\r\n          onClick={e => onEdit(e)}\r\n          variant={`outline-${disabled ? 'info' : 'success'}`}\r\n        >\r\n          {disabled ? 'Edit' : 'Save'}\r\n        </Button>\r\n        <Button onClick={e => deleteTodo(id)} variant='outline-danger'>\r\n          X\r\n        </Button>\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useContext } from 'react';\r\nimport TodoContext from '../context/todoContext';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst Todos = () => {\r\n  const todoContext = useContext(TodoContext);\r\n  const { todos } = todoContext;\r\n\r\n  return (\r\n    todos.length > 0 && (\r\n      <div>\r\n        {todos.map(todo => (\r\n          <TodoItem key={todo.id} todo={todo} />\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React from 'react';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport TodoState from './context/TodoState';\nimport Header from './components/Header';\nimport AddTodo from './components/AddTodo';\nimport Todos from './components/Todos';\n\nfunction App() {\n  return (\n    <TodoState>\n      <Header />\n      <Container>\n        <AddTodo />\n        <Todos />\n      </Container>\n    </TodoState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootswatch/dist/lumen/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}